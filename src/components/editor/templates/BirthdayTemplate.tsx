
import { Canvas, ITextOptions, Rect, Circle, Text } from 'fabric';
import { addEditableText } from '@/utils/canvasUtils';

export const loadBirthdayTemplate = (canvas: Canvas) => {
  // Add the blessing text at top
  addEditableText(canvas, "|| ‡§∂‡•ç‡§∞‡•Ä ‡§ó‡§£‡•á‡§∂‡§æ‡§Ø ‡§®‡§Æ‡§É ||", 300, 50, {
    fontSize: 24,
    fill: '#d23369',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'center',
    fontWeight: 'bold'
  });

  // Add main title
  addEditableText(canvas, "‡§™‡•ç‡§∞‡§•‡§Æ ‡§µ‡§æ‡§¢‡§¶‡§ø‡§µ‡§∏ ‡§∏‡•ã‡§π‡§≥‡§æ ‡§®‡§ø‡§Æ‡§Ç‡§§‡•ç‡§∞‡§£", 300, 100, {
    fontSize: 36,
    fill: '#d23369',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'center',
    fontWeight: 'bold'
  });

  // Add child name
  addEditableText(canvas, "‡§Ö‡§®‡•Å‡§™‡•ç‡§∞‡§ø‡§Ø‡§æ", 300, 180, {
    fontSize: 48,
    fill: '#b91c1c',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'center',
    fontWeight: 'bold'
  });

  // Add decorative line
  const line = new Rect({
    left: 240,
    top: 240,
    width: 120,
    height: 4,
    fill: {
      type: 'linear',
      coords: {
        x1: 0,
        y1: 0,
        x2: 120,
        y2: 0
      },
      colorStops: [
        { offset: 0, color: '#d23369' },
        { offset: 1, color: '#9333ea' }
      ]
    } as any,
    selectable: false
  });
  canvas.add(line);

  // Add placeholder for child photo
  const childPhotoPlaceholder = new Circle({
    left: 225,
    top: 280,
    radius: 75,
    fill: '#f3e7e9',
    stroke: '#ffffff',
    strokeWidth: 8,
    originX: 'center',
    originY: 'center'
  });
  canvas.add(childPhotoPlaceholder);

  // Add program text
  addEditableText(canvas, "‚ú¶ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§ï‡•ç‡§∞‡§Æ ‚ú¶", 300, 400, {
    fontSize: 22,
    fill: '#d23369',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'center'
  });

  // Add date
  addEditableText(canvas, "‡§∏‡•ã‡§Æ‡§µ‡§æ‡§∞ ‡§¶‡§ø. ‡•®‡•ß/‡•ß‡•®/‡•®‡•¶‡•®‡•© ‡§∞‡•ã‡§ú‡•Ä", 300, 430, {
    fontSize: 20,
    fill: '#333333',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'center',
    fontWeight: 'bold'
  });

  // Add time
  addEditableText(canvas, "‡§∏‡§æ‡§Ø‡§Ç‡§ï‡§æ‡§≥‡•Ä : ‡•≠ ‡§µ‡§æ‡§ú‡§§‡§æ", 300, 460, {
    fontSize: 18,
    fill: '#333333',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'center'
  });

  // Add description
  addEditableText(canvas, "‡§∏‡•ã‡§®‡•á‡§∞‡•Ä ‡§¶‡§ø‡§µ‡§∏‡§æ‡§ö‡•ç‡§Ø‡§æ ‡§∏‡•ã‡§®‡•á‡§∞‡•Ä ‡§∂‡•Å‡§≠‡•á‡§ö‡•ç‡§õ‡§æ ‡§¶‡•á‡§£‡•ç‡§Ø‡§æ‡§∏‡§æ‡§†‡•Ä ‡§π‡§µ‡•á‡§§ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§∏‡•Ä ‡§∏‡§æ‡§∞‡•Ä ‡§∏‡•ã‡§®‡•á‡§∞‡•Ä... \n‡§Æ‡§æ‡§ù‡•Ä ‡§™‡§§‡•Ä, ‡§Æ‡§æ‡§ù‡•Ä ‡§∏‡•ã‡§®‡•Å‡§≤‡•Ä... ‡§¨‡§ò‡§§‡§æ ‡§¨‡§ò‡§§‡§æ ‡§¶‡•ã‡§® ‡§µ‡§∞‡•ç‡§∑‡§æ‡§Ç‡§ö‡•Ä ‡§ù‡§æ‡§≤‡•Ä. \n‡§µ‡§æ‡§¢‡§¶‡§ø‡§µ‡§∏‡§æ‡§®‡§ø‡§Æ‡§ø‡§§‡•ç‡§§ ‡§Ü‡§Ø‡•ã‡§ú‡§ø‡§§ ‡§ï‡•á‡§≤‡§æ ‡§Ü‡§π‡•á ‡§è‡§ï ‡§π‡•á‡§§... \n‡§ú‡•ç‡§Ø‡§æ‡§ö‡•á ‡§Ü‡§Æ‡§Ç‡§§‡•ç‡§∞‡§£ ‡§Ü‡§π‡•á ‡§§‡•Å‡§Æ‡•ç‡§π‡§æ ‡§∏‡§∞‡•ç‡§µ‡§æ‡§Ç‡§®‡§æ ‡§Ø‡•á‡§£‡•ç‡§Ø‡§æ‡§ö‡•á.", 300, 540, {
    fontSize: 14,
    fill: '#666666',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'center',
    lineHeight: 1.3
  });

  // Add venue section
  addEditableText(canvas, "‚ú¶ ‡§∏‡•ç‡§•‡§≥ :- ‚ú¶", 300, 620, {
    fontSize: 18,
    fill: '#d23369',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'center'
  });

  // Add venue
  addEditableText(canvas, "‡§°‡§æ‡§ï‡•Å‡§∞ ‡§¨‡§æ‡§ú‡§æ‡§∞‡§ó‡•á‡§ü ‡§ï‡•á ‡§™‡§æ‡§∏ ‡§â‡§™ ‡§ï‡§æ‡§∞‡•ç‡§Ø‡§æ‡§≤‡§Ø, ‡§Æ‡•Å‡§Ç‡§¨‡§à, ‡§Æ‡§π‡§æ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞ - ‡•™‡•©‡•™‡•¶‡•¶‡•ß", 300, 645, {
    fontSize: 14,
    fill: '#666666',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'center'
  });

  // Add host text
  addEditableText(canvas, "‚ú¶ ‡§Ü‡§™‡§≤‡•á ‡§®‡§Æ‡•ç‡§∞ ‚ú¶", 100, 700, {
    fontSize: 16,
    fill: '#d23369',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'left'
  });

  // Add host names
  addEditableText(canvas, "‡§∂‡•ç‡§∞‡•Ä. ‡§Ü‡§¶‡§ø‡§§‡•ç‡§Ø ‡§Ö‡§π‡§ø‡§∞‡•á\n‡§∂‡•ç‡§∞‡•Ä. ‡§™‡•Å‡§®‡§Æ ‡§µ‡§ø‡§ú‡§Ø ‡§Ö‡§π‡§ø‡§∞‡•á", 100, 725, {
    fontSize: 14,
    fill: '#666666',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'left'
  });

  // Add contact text
  addEditableText(canvas, "‚ú¶ ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‚ú¶", 500, 700, {
    fontSize: 16,
    fill: '#d23369',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'right'
  });

  // Add contacts
  addEditableText(canvas, "üìû ‡•Ø‡•Æ‡•¶‡•¶‡•¶‡•¶‡•¶\nüìû ‡•Ø‡•´‡•¶‡•¶‡•¶‡•¶‡•¶", 500, 725, {
    fontSize: 14,
    fill: '#d23369',
    fontFamily: 'Noto Sans Devanagari',
    textAlign: 'right'
  });

  // Add birthday decoration
  const birthdayRect = new Rect({
    left: 300,
    top: 725,
    width: 120,
    height: 60,
    fill: {
      type: 'linear',
      coords: {
        x1: 0,
        y1: 0,
        x2: 120,
        y2: 0
      },
      colorStops: [
        { offset: 0, color: '#3bb6ad' },
        { offset: 1, color: '#1976d2' }
      ]
    } as any,
    rx: 10,
    ry: 10,
    originX: 'center',
    originY: 'center'
  });
  canvas.add(birthdayRect);

  // Add birthday text
  addEditableText(canvas, "BIRTHDAY", 300, 715, {
    fontSize: 16,
    fill: '#ffffff',
    fontFamily: 'Poppins',
    textAlign: 'center',
    fontWeight: 'bold'
  });

  addEditableText(canvas, "CELEBRATIONS", 300, 735, {
    fontSize: 10,
    fill: '#ffffff',
    fontFamily: 'Poppins',
    textAlign: 'center'
  });

  // Add balloon decorations
  const balloonText1 = new Text("üéàüéà", {
    left: 50,
    top: 760,
    fontSize: 36,
    selectable: false
  });
  canvas.add(balloonText1);

  const balloonText2 = new Text("üéàüéà", {
    left: 530,
    top: 760,
    fontSize: 36,
    selectable: false
  });
  canvas.add(balloonText2);
};
